// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: iod_test.proto

#ifndef PROTOBUF_iod_5ftest_2eproto__INCLUDED
#define PROTOBUF_iod_5ftest_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "common/iod_common.pb.h"
// @@protoc_insertion_point(includes)

namespace com {
namespace iod {
namespace pb {
namespace test {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_iod_5ftest_2eproto();
void protobuf_AssignDesc_iod_5ftest_2eproto();
void protobuf_ShutdownFile_iod_5ftest_2eproto();

class req_authentication;
class res_authentication;
class req_login;
class res_login;
class req_test_info;
class res_test_info;
class req_logout;
class req_test_response_time;
class res_test_response_time;
class notify_kickout;
class test_msg_1;
class test_msg_2;
class test_msg_3;
class test_msg_4;
class test_msg_5;
class test_msg_6;
class test_msg_7;
class test_msg_8;
class test_msg_9;
class test_msg_10;
class test_msg_11;
class test_msg_12;
class test_msg_13;
class test_msg_14;
class test_msg_15;
class test_msg_16;
class test_msg_17;
class test_msg_18;
class test_msg_19;
class test_msg_20;

// ===================================================================

class req_authentication : public ::google::protobuf::Message {
 public:
  req_authentication();
  virtual ~req_authentication();
  
  req_authentication(const req_authentication& from);
  
  inline req_authentication& operator=(const req_authentication& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const req_authentication& default_instance();
  
  void Swap(req_authentication* other);
  
  // implements Message ----------------------------------------------
  
  req_authentication* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const req_authentication& from);
  void MergeFrom(const req_authentication& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline const ::std::string& userid() const;
  inline void set_userid(const ::std::string& value);
  inline void set_userid(const char* value);
  inline void set_userid(const char* value, size_t size);
  inline ::std::string* mutable_userid();
  inline ::std::string* release_userid();
  
  // optional string authentication = 2;
  inline bool has_authentication() const;
  inline void clear_authentication();
  static const int kAuthenticationFieldNumber = 2;
  inline const ::std::string& authentication() const;
  inline void set_authentication(const ::std::string& value);
  inline void set_authentication(const char* value);
  inline void set_authentication(const char* value, size_t size);
  inline ::std::string* mutable_authentication();
  inline ::std::string* release_authentication();
  
  // @@protoc_insertion_point(class_scope:com.iod.pb.test.req_authentication)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_authentication();
  inline void clear_has_authentication();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* userid_;
  ::std::string* authentication_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_iod_5ftest_2eproto();
  friend void protobuf_AssignDesc_iod_5ftest_2eproto();
  friend void protobuf_ShutdownFile_iod_5ftest_2eproto();
  
  void InitAsDefaultInstance();
  static req_authentication* default_instance_;
};
// -------------------------------------------------------------------

class res_authentication : public ::google::protobuf::Message {
 public:
  res_authentication();
  virtual ~res_authentication();
  
  res_authentication(const res_authentication& from);
  
  inline res_authentication& operator=(const res_authentication& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const res_authentication& default_instance();
  
  void Swap(res_authentication* other);
  
  // implements Message ----------------------------------------------
  
  res_authentication* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const res_authentication& from);
  void MergeFrom(const res_authentication& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional sint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);
  
  // optional string authorization = 2;
  inline bool has_authorization() const;
  inline void clear_authorization();
  static const int kAuthorizationFieldNumber = 2;
  inline const ::std::string& authorization() const;
  inline void set_authorization(const ::std::string& value);
  inline void set_authorization(const char* value);
  inline void set_authorization(const char* value, size_t size);
  inline ::std::string* mutable_authorization();
  inline ::std::string* release_authorization();
  
  // @@protoc_insertion_point(class_scope:com.iod.pb.test.res_authentication)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_authorization();
  inline void clear_has_authorization();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* authorization_;
  ::google::protobuf::int32 result_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_iod_5ftest_2eproto();
  friend void protobuf_AssignDesc_iod_5ftest_2eproto();
  friend void protobuf_ShutdownFile_iod_5ftest_2eproto();
  
  void InitAsDefaultInstance();
  static res_authentication* default_instance_;
};
// -------------------------------------------------------------------

class req_login : public ::google::protobuf::Message {
 public:
  req_login();
  virtual ~req_login();
  
  req_login(const req_login& from);
  
  inline req_login& operator=(const req_login& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const req_login& default_instance();
  
  void Swap(req_login* other);
  
  // implements Message ----------------------------------------------
  
  req_login* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const req_login& from);
  void MergeFrom(const req_login& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline const ::std::string& userid() const;
  inline void set_userid(const ::std::string& value);
  inline void set_userid(const char* value);
  inline void set_userid(const char* value, size_t size);
  inline ::std::string* mutable_userid();
  inline ::std::string* release_userid();
  
  // optional string authorization = 2;
  inline bool has_authorization() const;
  inline void clear_authorization();
  static const int kAuthorizationFieldNumber = 2;
  inline const ::std::string& authorization() const;
  inline void set_authorization(const ::std::string& value);
  inline void set_authorization(const char* value);
  inline void set_authorization(const char* value, size_t size);
  inline ::std::string* mutable_authorization();
  inline ::std::string* release_authorization();
  
  // @@protoc_insertion_point(class_scope:com.iod.pb.test.req_login)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_authorization();
  inline void clear_has_authorization();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* userid_;
  ::std::string* authorization_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_iod_5ftest_2eproto();
  friend void protobuf_AssignDesc_iod_5ftest_2eproto();
  friend void protobuf_ShutdownFile_iod_5ftest_2eproto();
  
  void InitAsDefaultInstance();
  static req_login* default_instance_;
};
// -------------------------------------------------------------------

class res_login : public ::google::protobuf::Message {
 public:
  res_login();
  virtual ~res_login();
  
  res_login(const res_login& from);
  
  inline res_login& operator=(const res_login& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const res_login& default_instance();
  
  void Swap(res_login* other);
  
  // implements Message ----------------------------------------------
  
  res_login* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const res_login& from);
  void MergeFrom(const res_login& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline const ::std::string& userid() const;
  inline void set_userid(const ::std::string& value);
  inline void set_userid(const char* value);
  inline void set_userid(const char* value, size_t size);
  inline ::std::string* mutable_userid();
  inline ::std::string* release_userid();
  
  // optional sint32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.iod.pb.test.res_login)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_result();
  inline void clear_has_result();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* userid_;
  ::google::protobuf::int32 result_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_iod_5ftest_2eproto();
  friend void protobuf_AssignDesc_iod_5ftest_2eproto();
  friend void protobuf_ShutdownFile_iod_5ftest_2eproto();
  
  void InitAsDefaultInstance();
  static res_login* default_instance_;
};
// -------------------------------------------------------------------

class req_test_info : public ::google::protobuf::Message {
 public:
  req_test_info();
  virtual ~req_test_info();
  
  req_test_info(const req_test_info& from);
  
  inline req_test_info& operator=(const req_test_info& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const req_test_info& default_instance();
  
  void Swap(req_test_info* other);
  
  // implements Message ----------------------------------------------
  
  req_test_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const req_test_info& from);
  void MergeFrom(const req_test_info& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::std::string& info() const;
  inline void set_info(const ::std::string& value);
  inline void set_info(const char* value);
  inline void set_info(const char* value, size_t size);
  inline ::std::string* mutable_info();
  inline ::std::string* release_info();
  
  // @@protoc_insertion_point(class_scope:com.iod.pb.test.req_test_info)
 private:
  inline void set_has_info();
  inline void clear_has_info();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* info_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iod_5ftest_2eproto();
  friend void protobuf_AssignDesc_iod_5ftest_2eproto();
  friend void protobuf_ShutdownFile_iod_5ftest_2eproto();
  
  void InitAsDefaultInstance();
  static req_test_info* default_instance_;
};
// -------------------------------------------------------------------

class res_test_info : public ::google::protobuf::Message {
 public:
  res_test_info();
  virtual ~res_test_info();
  
  res_test_info(const res_test_info& from);
  
  inline res_test_info& operator=(const res_test_info& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const res_test_info& default_instance();
  
  void Swap(res_test_info* other);
  
  // implements Message ----------------------------------------------
  
  res_test_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const res_test_info& from);
  void MergeFrom(const res_test_info& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::std::string& info() const;
  inline void set_info(const ::std::string& value);
  inline void set_info(const char* value);
  inline void set_info(const char* value, size_t size);
  inline ::std::string* mutable_info();
  inline ::std::string* release_info();
  
  // @@protoc_insertion_point(class_scope:com.iod.pb.test.res_test_info)
 private:
  inline void set_has_info();
  inline void clear_has_info();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* info_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iod_5ftest_2eproto();
  friend void protobuf_AssignDesc_iod_5ftest_2eproto();
  friend void protobuf_ShutdownFile_iod_5ftest_2eproto();
  
  void InitAsDefaultInstance();
  static res_test_info* default_instance_;
};
// -------------------------------------------------------------------

class req_logout : public ::google::protobuf::Message {
 public:
  req_logout();
  virtual ~req_logout();
  
  req_logout(const req_logout& from);
  
  inline req_logout& operator=(const req_logout& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const req_logout& default_instance();
  
  void Swap(req_logout* other);
  
  // implements Message ----------------------------------------------
  
  req_logout* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const req_logout& from);
  void MergeFrom(const req_logout& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:com.iod.pb.test.req_logout)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_iod_5ftest_2eproto();
  friend void protobuf_AssignDesc_iod_5ftest_2eproto();
  friend void protobuf_ShutdownFile_iod_5ftest_2eproto();
  
  void InitAsDefaultInstance();
  static req_logout* default_instance_;
};
// -------------------------------------------------------------------

class req_test_response_time : public ::google::protobuf::Message {
 public:
  req_test_response_time();
  virtual ~req_test_response_time();
  
  req_test_response_time(const req_test_response_time& from);
  
  inline req_test_response_time& operator=(const req_test_response_time& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const req_test_response_time& default_instance();
  
  void Swap(req_test_response_time* other);
  
  // implements Message ----------------------------------------------
  
  req_test_response_time* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const req_test_response_time& from);
  void MergeFrom(const req_test_response_time& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required sint64 req_timestamp = 1;
  inline bool has_req_timestamp() const;
  inline void clear_req_timestamp();
  static const int kReqTimestampFieldNumber = 1;
  inline ::google::protobuf::int64 req_timestamp() const;
  inline void set_req_timestamp(::google::protobuf::int64 value);
  
  // @@protoc_insertion_point(class_scope:com.iod.pb.test.req_test_response_time)
 private:
  inline void set_has_req_timestamp();
  inline void clear_has_req_timestamp();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 req_timestamp_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iod_5ftest_2eproto();
  friend void protobuf_AssignDesc_iod_5ftest_2eproto();
  friend void protobuf_ShutdownFile_iod_5ftest_2eproto();
  
  void InitAsDefaultInstance();
  static req_test_response_time* default_instance_;
};
// -------------------------------------------------------------------

class res_test_response_time : public ::google::protobuf::Message {
 public:
  res_test_response_time();
  virtual ~res_test_response_time();
  
  res_test_response_time(const res_test_response_time& from);
  
  inline res_test_response_time& operator=(const res_test_response_time& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const res_test_response_time& default_instance();
  
  void Swap(res_test_response_time* other);
  
  // implements Message ----------------------------------------------
  
  res_test_response_time* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const res_test_response_time& from);
  void MergeFrom(const res_test_response_time& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required sint64 req_timestamp = 1;
  inline bool has_req_timestamp() const;
  inline void clear_req_timestamp();
  static const int kReqTimestampFieldNumber = 1;
  inline ::google::protobuf::int64 req_timestamp() const;
  inline void set_req_timestamp(::google::protobuf::int64 value);
  
  // @@protoc_insertion_point(class_scope:com.iod.pb.test.res_test_response_time)
 private:
  inline void set_has_req_timestamp();
  inline void clear_has_req_timestamp();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 req_timestamp_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iod_5ftest_2eproto();
  friend void protobuf_AssignDesc_iod_5ftest_2eproto();
  friend void protobuf_ShutdownFile_iod_5ftest_2eproto();
  
  void InitAsDefaultInstance();
  static res_test_response_time* default_instance_;
};
// -------------------------------------------------------------------

class notify_kickout : public ::google::protobuf::Message {
 public:
  notify_kickout();
  virtual ~notify_kickout();
  
  notify_kickout(const notify_kickout& from);
  
  inline notify_kickout& operator=(const notify_kickout& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const notify_kickout& default_instance();
  
  void Swap(notify_kickout* other);
  
  // implements Message ----------------------------------------------
  
  notify_kickout* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const notify_kickout& from);
  void MergeFrom(const notify_kickout& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional sint32 kick_reason = 1;
  inline bool has_kick_reason() const;
  inline void clear_kick_reason();
  static const int kKickReasonFieldNumber = 1;
  inline ::google::protobuf::int32 kick_reason() const;
  inline void set_kick_reason(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.iod.pb.test.notify_kickout)
 private:
  inline void set_has_kick_reason();
  inline void clear_has_kick_reason();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 kick_reason_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iod_5ftest_2eproto();
  friend void protobuf_AssignDesc_iod_5ftest_2eproto();
  friend void protobuf_ShutdownFile_iod_5ftest_2eproto();
  
  void InitAsDefaultInstance();
  static notify_kickout* default_instance_;
};
// -------------------------------------------------------------------

class test_msg_1 : public ::google::protobuf::Message {
 public:
  test_msg_1();
  virtual ~test_msg_1();
  
  test_msg_1(const test_msg_1& from);
  
  inline test_msg_1& operator=(const test_msg_1& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const test_msg_1& default_instance();
  
  void Swap(test_msg_1* other);
  
  // implements Message ----------------------------------------------
  
  test_msg_1* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const test_msg_1& from);
  void MergeFrom(const test_msg_1& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bytes test_data = 1;
  inline bool has_test_data() const;
  inline void clear_test_data();
  static const int kTestDataFieldNumber = 1;
  inline const ::std::string& test_data() const;
  inline void set_test_data(const ::std::string& value);
  inline void set_test_data(const char* value);
  inline void set_test_data(const void* value, size_t size);
  inline ::std::string* mutable_test_data();
  inline ::std::string* release_test_data();
  
  // @@protoc_insertion_point(class_scope:com.iod.pb.test.test_msg_1)
 private:
  inline void set_has_test_data();
  inline void clear_has_test_data();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* test_data_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iod_5ftest_2eproto();
  friend void protobuf_AssignDesc_iod_5ftest_2eproto();
  friend void protobuf_ShutdownFile_iod_5ftest_2eproto();
  
  void InitAsDefaultInstance();
  static test_msg_1* default_instance_;
};
// -------------------------------------------------------------------

class test_msg_2 : public ::google::protobuf::Message {
 public:
  test_msg_2();
  virtual ~test_msg_2();
  
  test_msg_2(const test_msg_2& from);
  
  inline test_msg_2& operator=(const test_msg_2& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const test_msg_2& default_instance();
  
  void Swap(test_msg_2* other);
  
  // implements Message ----------------------------------------------
  
  test_msg_2* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const test_msg_2& from);
  void MergeFrom(const test_msg_2& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bytes test_data = 1;
  inline bool has_test_data() const;
  inline void clear_test_data();
  static const int kTestDataFieldNumber = 1;
  inline const ::std::string& test_data() const;
  inline void set_test_data(const ::std::string& value);
  inline void set_test_data(const char* value);
  inline void set_test_data(const void* value, size_t size);
  inline ::std::string* mutable_test_data();
  inline ::std::string* release_test_data();
  
  // @@protoc_insertion_point(class_scope:com.iod.pb.test.test_msg_2)
 private:
  inline void set_has_test_data();
  inline void clear_has_test_data();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* test_data_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iod_5ftest_2eproto();
  friend void protobuf_AssignDesc_iod_5ftest_2eproto();
  friend void protobuf_ShutdownFile_iod_5ftest_2eproto();
  
  void InitAsDefaultInstance();
  static test_msg_2* default_instance_;
};
// -------------------------------------------------------------------

class test_msg_3 : public ::google::protobuf::Message {
 public:
  test_msg_3();
  virtual ~test_msg_3();
  
  test_msg_3(const test_msg_3& from);
  
  inline test_msg_3& operator=(const test_msg_3& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const test_msg_3& default_instance();
  
  void Swap(test_msg_3* other);
  
  // implements Message ----------------------------------------------
  
  test_msg_3* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const test_msg_3& from);
  void MergeFrom(const test_msg_3& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bytes test_data = 1;
  inline bool has_test_data() const;
  inline void clear_test_data();
  static const int kTestDataFieldNumber = 1;
  inline const ::std::string& test_data() const;
  inline void set_test_data(const ::std::string& value);
  inline void set_test_data(const char* value);
  inline void set_test_data(const void* value, size_t size);
  inline ::std::string* mutable_test_data();
  inline ::std::string* release_test_data();
  
  // @@protoc_insertion_point(class_scope:com.iod.pb.test.test_msg_3)
 private:
  inline void set_has_test_data();
  inline void clear_has_test_data();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* test_data_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iod_5ftest_2eproto();
  friend void protobuf_AssignDesc_iod_5ftest_2eproto();
  friend void protobuf_ShutdownFile_iod_5ftest_2eproto();
  
  void InitAsDefaultInstance();
  static test_msg_3* default_instance_;
};
// -------------------------------------------------------------------

class test_msg_4 : public ::google::protobuf::Message {
 public:
  test_msg_4();
  virtual ~test_msg_4();
  
  test_msg_4(const test_msg_4& from);
  
  inline test_msg_4& operator=(const test_msg_4& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const test_msg_4& default_instance();
  
  void Swap(test_msg_4* other);
  
  // implements Message ----------------------------------------------
  
  test_msg_4* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const test_msg_4& from);
  void MergeFrom(const test_msg_4& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bytes test_data = 1;
  inline bool has_test_data() const;
  inline void clear_test_data();
  static const int kTestDataFieldNumber = 1;
  inline const ::std::string& test_data() const;
  inline void set_test_data(const ::std::string& value);
  inline void set_test_data(const char* value);
  inline void set_test_data(const void* value, size_t size);
  inline ::std::string* mutable_test_data();
  inline ::std::string* release_test_data();
  
  // @@protoc_insertion_point(class_scope:com.iod.pb.test.test_msg_4)
 private:
  inline void set_has_test_data();
  inline void clear_has_test_data();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* test_data_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iod_5ftest_2eproto();
  friend void protobuf_AssignDesc_iod_5ftest_2eproto();
  friend void protobuf_ShutdownFile_iod_5ftest_2eproto();
  
  void InitAsDefaultInstance();
  static test_msg_4* default_instance_;
};
// -------------------------------------------------------------------

class test_msg_5 : public ::google::protobuf::Message {
 public:
  test_msg_5();
  virtual ~test_msg_5();
  
  test_msg_5(const test_msg_5& from);
  
  inline test_msg_5& operator=(const test_msg_5& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const test_msg_5& default_instance();
  
  void Swap(test_msg_5* other);
  
  // implements Message ----------------------------------------------
  
  test_msg_5* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const test_msg_5& from);
  void MergeFrom(const test_msg_5& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bytes test_data = 1;
  inline bool has_test_data() const;
  inline void clear_test_data();
  static const int kTestDataFieldNumber = 1;
  inline const ::std::string& test_data() const;
  inline void set_test_data(const ::std::string& value);
  inline void set_test_data(const char* value);
  inline void set_test_data(const void* value, size_t size);
  inline ::std::string* mutable_test_data();
  inline ::std::string* release_test_data();
  
  // @@protoc_insertion_point(class_scope:com.iod.pb.test.test_msg_5)
 private:
  inline void set_has_test_data();
  inline void clear_has_test_data();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* test_data_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iod_5ftest_2eproto();
  friend void protobuf_AssignDesc_iod_5ftest_2eproto();
  friend void protobuf_ShutdownFile_iod_5ftest_2eproto();
  
  void InitAsDefaultInstance();
  static test_msg_5* default_instance_;
};
// -------------------------------------------------------------------

class test_msg_6 : public ::google::protobuf::Message {
 public:
  test_msg_6();
  virtual ~test_msg_6();
  
  test_msg_6(const test_msg_6& from);
  
  inline test_msg_6& operator=(const test_msg_6& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const test_msg_6& default_instance();
  
  void Swap(test_msg_6* other);
  
  // implements Message ----------------------------------------------
  
  test_msg_6* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const test_msg_6& from);
  void MergeFrom(const test_msg_6& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bytes test_data = 1;
  inline bool has_test_data() const;
  inline void clear_test_data();
  static const int kTestDataFieldNumber = 1;
  inline const ::std::string& test_data() const;
  inline void set_test_data(const ::std::string& value);
  inline void set_test_data(const char* value);
  inline void set_test_data(const void* value, size_t size);
  inline ::std::string* mutable_test_data();
  inline ::std::string* release_test_data();
  
  // @@protoc_insertion_point(class_scope:com.iod.pb.test.test_msg_6)
 private:
  inline void set_has_test_data();
  inline void clear_has_test_data();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* test_data_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iod_5ftest_2eproto();
  friend void protobuf_AssignDesc_iod_5ftest_2eproto();
  friend void protobuf_ShutdownFile_iod_5ftest_2eproto();
  
  void InitAsDefaultInstance();
  static test_msg_6* default_instance_;
};
// -------------------------------------------------------------------

class test_msg_7 : public ::google::protobuf::Message {
 public:
  test_msg_7();
  virtual ~test_msg_7();
  
  test_msg_7(const test_msg_7& from);
  
  inline test_msg_7& operator=(const test_msg_7& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const test_msg_7& default_instance();
  
  void Swap(test_msg_7* other);
  
  // implements Message ----------------------------------------------
  
  test_msg_7* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const test_msg_7& from);
  void MergeFrom(const test_msg_7& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bytes test_data = 1;
  inline bool has_test_data() const;
  inline void clear_test_data();
  static const int kTestDataFieldNumber = 1;
  inline const ::std::string& test_data() const;
  inline void set_test_data(const ::std::string& value);
  inline void set_test_data(const char* value);
  inline void set_test_data(const void* value, size_t size);
  inline ::std::string* mutable_test_data();
  inline ::std::string* release_test_data();
  
  // @@protoc_insertion_point(class_scope:com.iod.pb.test.test_msg_7)
 private:
  inline void set_has_test_data();
  inline void clear_has_test_data();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* test_data_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iod_5ftest_2eproto();
  friend void protobuf_AssignDesc_iod_5ftest_2eproto();
  friend void protobuf_ShutdownFile_iod_5ftest_2eproto();
  
  void InitAsDefaultInstance();
  static test_msg_7* default_instance_;
};
// -------------------------------------------------------------------

class test_msg_8 : public ::google::protobuf::Message {
 public:
  test_msg_8();
  virtual ~test_msg_8();
  
  test_msg_8(const test_msg_8& from);
  
  inline test_msg_8& operator=(const test_msg_8& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const test_msg_8& default_instance();
  
  void Swap(test_msg_8* other);
  
  // implements Message ----------------------------------------------
  
  test_msg_8* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const test_msg_8& from);
  void MergeFrom(const test_msg_8& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bytes test_data = 1;
  inline bool has_test_data() const;
  inline void clear_test_data();
  static const int kTestDataFieldNumber = 1;
  inline const ::std::string& test_data() const;
  inline void set_test_data(const ::std::string& value);
  inline void set_test_data(const char* value);
  inline void set_test_data(const void* value, size_t size);
  inline ::std::string* mutable_test_data();
  inline ::std::string* release_test_data();
  
  // @@protoc_insertion_point(class_scope:com.iod.pb.test.test_msg_8)
 private:
  inline void set_has_test_data();
  inline void clear_has_test_data();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* test_data_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iod_5ftest_2eproto();
  friend void protobuf_AssignDesc_iod_5ftest_2eproto();
  friend void protobuf_ShutdownFile_iod_5ftest_2eproto();
  
  void InitAsDefaultInstance();
  static test_msg_8* default_instance_;
};
// -------------------------------------------------------------------

class test_msg_9 : public ::google::protobuf::Message {
 public:
  test_msg_9();
  virtual ~test_msg_9();
  
  test_msg_9(const test_msg_9& from);
  
  inline test_msg_9& operator=(const test_msg_9& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const test_msg_9& default_instance();
  
  void Swap(test_msg_9* other);
  
  // implements Message ----------------------------------------------
  
  test_msg_9* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const test_msg_9& from);
  void MergeFrom(const test_msg_9& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bytes test_data = 1;
  inline bool has_test_data() const;
  inline void clear_test_data();
  static const int kTestDataFieldNumber = 1;
  inline const ::std::string& test_data() const;
  inline void set_test_data(const ::std::string& value);
  inline void set_test_data(const char* value);
  inline void set_test_data(const void* value, size_t size);
  inline ::std::string* mutable_test_data();
  inline ::std::string* release_test_data();
  
  // @@protoc_insertion_point(class_scope:com.iod.pb.test.test_msg_9)
 private:
  inline void set_has_test_data();
  inline void clear_has_test_data();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* test_data_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iod_5ftest_2eproto();
  friend void protobuf_AssignDesc_iod_5ftest_2eproto();
  friend void protobuf_ShutdownFile_iod_5ftest_2eproto();
  
  void InitAsDefaultInstance();
  static test_msg_9* default_instance_;
};
// -------------------------------------------------------------------

class test_msg_10 : public ::google::protobuf::Message {
 public:
  test_msg_10();
  virtual ~test_msg_10();
  
  test_msg_10(const test_msg_10& from);
  
  inline test_msg_10& operator=(const test_msg_10& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const test_msg_10& default_instance();
  
  void Swap(test_msg_10* other);
  
  // implements Message ----------------------------------------------
  
  test_msg_10* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const test_msg_10& from);
  void MergeFrom(const test_msg_10& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bytes test_data = 1;
  inline bool has_test_data() const;
  inline void clear_test_data();
  static const int kTestDataFieldNumber = 1;
  inline const ::std::string& test_data() const;
  inline void set_test_data(const ::std::string& value);
  inline void set_test_data(const char* value);
  inline void set_test_data(const void* value, size_t size);
  inline ::std::string* mutable_test_data();
  inline ::std::string* release_test_data();
  
  // @@protoc_insertion_point(class_scope:com.iod.pb.test.test_msg_10)
 private:
  inline void set_has_test_data();
  inline void clear_has_test_data();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* test_data_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iod_5ftest_2eproto();
  friend void protobuf_AssignDesc_iod_5ftest_2eproto();
  friend void protobuf_ShutdownFile_iod_5ftest_2eproto();
  
  void InitAsDefaultInstance();
  static test_msg_10* default_instance_;
};
// -------------------------------------------------------------------

class test_msg_11 : public ::google::protobuf::Message {
 public:
  test_msg_11();
  virtual ~test_msg_11();
  
  test_msg_11(const test_msg_11& from);
  
  inline test_msg_11& operator=(const test_msg_11& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const test_msg_11& default_instance();
  
  void Swap(test_msg_11* other);
  
  // implements Message ----------------------------------------------
  
  test_msg_11* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const test_msg_11& from);
  void MergeFrom(const test_msg_11& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bytes test_data = 1;
  inline bool has_test_data() const;
  inline void clear_test_data();
  static const int kTestDataFieldNumber = 1;
  inline const ::std::string& test_data() const;
  inline void set_test_data(const ::std::string& value);
  inline void set_test_data(const char* value);
  inline void set_test_data(const void* value, size_t size);
  inline ::std::string* mutable_test_data();
  inline ::std::string* release_test_data();
  
  // @@protoc_insertion_point(class_scope:com.iod.pb.test.test_msg_11)
 private:
  inline void set_has_test_data();
  inline void clear_has_test_data();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* test_data_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iod_5ftest_2eproto();
  friend void protobuf_AssignDesc_iod_5ftest_2eproto();
  friend void protobuf_ShutdownFile_iod_5ftest_2eproto();
  
  void InitAsDefaultInstance();
  static test_msg_11* default_instance_;
};
// -------------------------------------------------------------------

class test_msg_12 : public ::google::protobuf::Message {
 public:
  test_msg_12();
  virtual ~test_msg_12();
  
  test_msg_12(const test_msg_12& from);
  
  inline test_msg_12& operator=(const test_msg_12& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const test_msg_12& default_instance();
  
  void Swap(test_msg_12* other);
  
  // implements Message ----------------------------------------------
  
  test_msg_12* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const test_msg_12& from);
  void MergeFrom(const test_msg_12& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bytes test_data = 1;
  inline bool has_test_data() const;
  inline void clear_test_data();
  static const int kTestDataFieldNumber = 1;
  inline const ::std::string& test_data() const;
  inline void set_test_data(const ::std::string& value);
  inline void set_test_data(const char* value);
  inline void set_test_data(const void* value, size_t size);
  inline ::std::string* mutable_test_data();
  inline ::std::string* release_test_data();
  
  // @@protoc_insertion_point(class_scope:com.iod.pb.test.test_msg_12)
 private:
  inline void set_has_test_data();
  inline void clear_has_test_data();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* test_data_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iod_5ftest_2eproto();
  friend void protobuf_AssignDesc_iod_5ftest_2eproto();
  friend void protobuf_ShutdownFile_iod_5ftest_2eproto();
  
  void InitAsDefaultInstance();
  static test_msg_12* default_instance_;
};
// -------------------------------------------------------------------

class test_msg_13 : public ::google::protobuf::Message {
 public:
  test_msg_13();
  virtual ~test_msg_13();
  
  test_msg_13(const test_msg_13& from);
  
  inline test_msg_13& operator=(const test_msg_13& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const test_msg_13& default_instance();
  
  void Swap(test_msg_13* other);
  
  // implements Message ----------------------------------------------
  
  test_msg_13* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const test_msg_13& from);
  void MergeFrom(const test_msg_13& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bytes test_data = 1;
  inline bool has_test_data() const;
  inline void clear_test_data();
  static const int kTestDataFieldNumber = 1;
  inline const ::std::string& test_data() const;
  inline void set_test_data(const ::std::string& value);
  inline void set_test_data(const char* value);
  inline void set_test_data(const void* value, size_t size);
  inline ::std::string* mutable_test_data();
  inline ::std::string* release_test_data();
  
  // @@protoc_insertion_point(class_scope:com.iod.pb.test.test_msg_13)
 private:
  inline void set_has_test_data();
  inline void clear_has_test_data();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* test_data_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iod_5ftest_2eproto();
  friend void protobuf_AssignDesc_iod_5ftest_2eproto();
  friend void protobuf_ShutdownFile_iod_5ftest_2eproto();
  
  void InitAsDefaultInstance();
  static test_msg_13* default_instance_;
};
// -------------------------------------------------------------------

class test_msg_14 : public ::google::protobuf::Message {
 public:
  test_msg_14();
  virtual ~test_msg_14();
  
  test_msg_14(const test_msg_14& from);
  
  inline test_msg_14& operator=(const test_msg_14& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const test_msg_14& default_instance();
  
  void Swap(test_msg_14* other);
  
  // implements Message ----------------------------------------------
  
  test_msg_14* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const test_msg_14& from);
  void MergeFrom(const test_msg_14& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bytes test_data = 1;
  inline bool has_test_data() const;
  inline void clear_test_data();
  static const int kTestDataFieldNumber = 1;
  inline const ::std::string& test_data() const;
  inline void set_test_data(const ::std::string& value);
  inline void set_test_data(const char* value);
  inline void set_test_data(const void* value, size_t size);
  inline ::std::string* mutable_test_data();
  inline ::std::string* release_test_data();
  
  // @@protoc_insertion_point(class_scope:com.iod.pb.test.test_msg_14)
 private:
  inline void set_has_test_data();
  inline void clear_has_test_data();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* test_data_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iod_5ftest_2eproto();
  friend void protobuf_AssignDesc_iod_5ftest_2eproto();
  friend void protobuf_ShutdownFile_iod_5ftest_2eproto();
  
  void InitAsDefaultInstance();
  static test_msg_14* default_instance_;
};
// -------------------------------------------------------------------

class test_msg_15 : public ::google::protobuf::Message {
 public:
  test_msg_15();
  virtual ~test_msg_15();
  
  test_msg_15(const test_msg_15& from);
  
  inline test_msg_15& operator=(const test_msg_15& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const test_msg_15& default_instance();
  
  void Swap(test_msg_15* other);
  
  // implements Message ----------------------------------------------
  
  test_msg_15* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const test_msg_15& from);
  void MergeFrom(const test_msg_15& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bytes test_data = 1;
  inline bool has_test_data() const;
  inline void clear_test_data();
  static const int kTestDataFieldNumber = 1;
  inline const ::std::string& test_data() const;
  inline void set_test_data(const ::std::string& value);
  inline void set_test_data(const char* value);
  inline void set_test_data(const void* value, size_t size);
  inline ::std::string* mutable_test_data();
  inline ::std::string* release_test_data();
  
  // @@protoc_insertion_point(class_scope:com.iod.pb.test.test_msg_15)
 private:
  inline void set_has_test_data();
  inline void clear_has_test_data();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* test_data_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iod_5ftest_2eproto();
  friend void protobuf_AssignDesc_iod_5ftest_2eproto();
  friend void protobuf_ShutdownFile_iod_5ftest_2eproto();
  
  void InitAsDefaultInstance();
  static test_msg_15* default_instance_;
};
// -------------------------------------------------------------------

class test_msg_16 : public ::google::protobuf::Message {
 public:
  test_msg_16();
  virtual ~test_msg_16();
  
  test_msg_16(const test_msg_16& from);
  
  inline test_msg_16& operator=(const test_msg_16& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const test_msg_16& default_instance();
  
  void Swap(test_msg_16* other);
  
  // implements Message ----------------------------------------------
  
  test_msg_16* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const test_msg_16& from);
  void MergeFrom(const test_msg_16& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bytes test_data = 1;
  inline bool has_test_data() const;
  inline void clear_test_data();
  static const int kTestDataFieldNumber = 1;
  inline const ::std::string& test_data() const;
  inline void set_test_data(const ::std::string& value);
  inline void set_test_data(const char* value);
  inline void set_test_data(const void* value, size_t size);
  inline ::std::string* mutable_test_data();
  inline ::std::string* release_test_data();
  
  // @@protoc_insertion_point(class_scope:com.iod.pb.test.test_msg_16)
 private:
  inline void set_has_test_data();
  inline void clear_has_test_data();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* test_data_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iod_5ftest_2eproto();
  friend void protobuf_AssignDesc_iod_5ftest_2eproto();
  friend void protobuf_ShutdownFile_iod_5ftest_2eproto();
  
  void InitAsDefaultInstance();
  static test_msg_16* default_instance_;
};
// -------------------------------------------------------------------

class test_msg_17 : public ::google::protobuf::Message {
 public:
  test_msg_17();
  virtual ~test_msg_17();
  
  test_msg_17(const test_msg_17& from);
  
  inline test_msg_17& operator=(const test_msg_17& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const test_msg_17& default_instance();
  
  void Swap(test_msg_17* other);
  
  // implements Message ----------------------------------------------
  
  test_msg_17* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const test_msg_17& from);
  void MergeFrom(const test_msg_17& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bytes test_data = 1;
  inline bool has_test_data() const;
  inline void clear_test_data();
  static const int kTestDataFieldNumber = 1;
  inline const ::std::string& test_data() const;
  inline void set_test_data(const ::std::string& value);
  inline void set_test_data(const char* value);
  inline void set_test_data(const void* value, size_t size);
  inline ::std::string* mutable_test_data();
  inline ::std::string* release_test_data();
  
  // @@protoc_insertion_point(class_scope:com.iod.pb.test.test_msg_17)
 private:
  inline void set_has_test_data();
  inline void clear_has_test_data();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* test_data_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iod_5ftest_2eproto();
  friend void protobuf_AssignDesc_iod_5ftest_2eproto();
  friend void protobuf_ShutdownFile_iod_5ftest_2eproto();
  
  void InitAsDefaultInstance();
  static test_msg_17* default_instance_;
};
// -------------------------------------------------------------------

class test_msg_18 : public ::google::protobuf::Message {
 public:
  test_msg_18();
  virtual ~test_msg_18();
  
  test_msg_18(const test_msg_18& from);
  
  inline test_msg_18& operator=(const test_msg_18& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const test_msg_18& default_instance();
  
  void Swap(test_msg_18* other);
  
  // implements Message ----------------------------------------------
  
  test_msg_18* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const test_msg_18& from);
  void MergeFrom(const test_msg_18& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bytes test_data = 1;
  inline bool has_test_data() const;
  inline void clear_test_data();
  static const int kTestDataFieldNumber = 1;
  inline const ::std::string& test_data() const;
  inline void set_test_data(const ::std::string& value);
  inline void set_test_data(const char* value);
  inline void set_test_data(const void* value, size_t size);
  inline ::std::string* mutable_test_data();
  inline ::std::string* release_test_data();
  
  // @@protoc_insertion_point(class_scope:com.iod.pb.test.test_msg_18)
 private:
  inline void set_has_test_data();
  inline void clear_has_test_data();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* test_data_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iod_5ftest_2eproto();
  friend void protobuf_AssignDesc_iod_5ftest_2eproto();
  friend void protobuf_ShutdownFile_iod_5ftest_2eproto();
  
  void InitAsDefaultInstance();
  static test_msg_18* default_instance_;
};
// -------------------------------------------------------------------

class test_msg_19 : public ::google::protobuf::Message {
 public:
  test_msg_19();
  virtual ~test_msg_19();
  
  test_msg_19(const test_msg_19& from);
  
  inline test_msg_19& operator=(const test_msg_19& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const test_msg_19& default_instance();
  
  void Swap(test_msg_19* other);
  
  // implements Message ----------------------------------------------
  
  test_msg_19* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const test_msg_19& from);
  void MergeFrom(const test_msg_19& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bytes test_data = 1;
  inline bool has_test_data() const;
  inline void clear_test_data();
  static const int kTestDataFieldNumber = 1;
  inline const ::std::string& test_data() const;
  inline void set_test_data(const ::std::string& value);
  inline void set_test_data(const char* value);
  inline void set_test_data(const void* value, size_t size);
  inline ::std::string* mutable_test_data();
  inline ::std::string* release_test_data();
  
  // @@protoc_insertion_point(class_scope:com.iod.pb.test.test_msg_19)
 private:
  inline void set_has_test_data();
  inline void clear_has_test_data();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* test_data_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iod_5ftest_2eproto();
  friend void protobuf_AssignDesc_iod_5ftest_2eproto();
  friend void protobuf_ShutdownFile_iod_5ftest_2eproto();
  
  void InitAsDefaultInstance();
  static test_msg_19* default_instance_;
};
// -------------------------------------------------------------------

class test_msg_20 : public ::google::protobuf::Message {
 public:
  test_msg_20();
  virtual ~test_msg_20();
  
  test_msg_20(const test_msg_20& from);
  
  inline test_msg_20& operator=(const test_msg_20& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const test_msg_20& default_instance();
  
  void Swap(test_msg_20* other);
  
  // implements Message ----------------------------------------------
  
  test_msg_20* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const test_msg_20& from);
  void MergeFrom(const test_msg_20& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bytes test_data = 1;
  inline bool has_test_data() const;
  inline void clear_test_data();
  static const int kTestDataFieldNumber = 1;
  inline const ::std::string& test_data() const;
  inline void set_test_data(const ::std::string& value);
  inline void set_test_data(const char* value);
  inline void set_test_data(const void* value, size_t size);
  inline ::std::string* mutable_test_data();
  inline ::std::string* release_test_data();
  
  // @@protoc_insertion_point(class_scope:com.iod.pb.test.test_msg_20)
 private:
  inline void set_has_test_data();
  inline void clear_has_test_data();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* test_data_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_iod_5ftest_2eproto();
  friend void protobuf_AssignDesc_iod_5ftest_2eproto();
  friend void protobuf_ShutdownFile_iod_5ftest_2eproto();
  
  void InitAsDefaultInstance();
  static test_msg_20* default_instance_;
};
// ===================================================================

static const int kReqAuthenticationFieldNumber = 1000;
extern ::google::protobuf::internal::ExtensionIdentifier< ::com::iod::pb::common::base_msg,
    ::google::protobuf::internal::MessageTypeTraits< ::com::iod::pb::test::req_authentication >, 11, false >
  _req_authentication;
static const int kResAuthenticationFieldNumber = 1001;
extern ::google::protobuf::internal::ExtensionIdentifier< ::com::iod::pb::common::base_msg,
    ::google::protobuf::internal::MessageTypeTraits< ::com::iod::pb::test::res_authentication >, 11, false >
  _res_authentication;
static const int kReqLoginFieldNumber = 1002;
extern ::google::protobuf::internal::ExtensionIdentifier< ::com::iod::pb::common::base_msg,
    ::google::protobuf::internal::MessageTypeTraits< ::com::iod::pb::test::req_login >, 11, false >
  _req_login;
static const int kResLoginFieldNumber = 1003;
extern ::google::protobuf::internal::ExtensionIdentifier< ::com::iod::pb::common::base_msg,
    ::google::protobuf::internal::MessageTypeTraits< ::com::iod::pb::test::res_login >, 11, false >
  _res_login;
static const int kReqTestInfoFieldNumber = 1004;
extern ::google::protobuf::internal::ExtensionIdentifier< ::com::iod::pb::common::base_msg,
    ::google::protobuf::internal::MessageTypeTraits< ::com::iod::pb::test::req_test_info >, 11, false >
  _req_test_info;
static const int kResTestInfoFieldNumber = 1005;
extern ::google::protobuf::internal::ExtensionIdentifier< ::com::iod::pb::common::base_msg,
    ::google::protobuf::internal::MessageTypeTraits< ::com::iod::pb::test::res_test_info >, 11, false >
  _res_test_info;
static const int kReqLogoutFieldNumber = 1006;
extern ::google::protobuf::internal::ExtensionIdentifier< ::com::iod::pb::common::base_msg,
    ::google::protobuf::internal::MessageTypeTraits< ::com::iod::pb::test::req_logout >, 11, false >
  _req_logout;
static const int kReqTestResponseTimeFieldNumber = 1007;
extern ::google::protobuf::internal::ExtensionIdentifier< ::com::iod::pb::common::base_msg,
    ::google::protobuf::internal::MessageTypeTraits< ::com::iod::pb::test::req_test_response_time >, 11, false >
  _req_test_response_time;
static const int kResTestResponseTimeFieldNumber = 1008;
extern ::google::protobuf::internal::ExtensionIdentifier< ::com::iod::pb::common::base_msg,
    ::google::protobuf::internal::MessageTypeTraits< ::com::iod::pb::test::res_test_response_time >, 11, false >
  _res_test_response_time;
static const int kNotifyKickoutFieldNumber = 1009;
extern ::google::protobuf::internal::ExtensionIdentifier< ::com::iod::pb::common::base_msg,
    ::google::protobuf::internal::MessageTypeTraits< ::com::iod::pb::test::notify_kickout >, 11, false >
  _notify_kickout;
static const int kTestMsg1FieldNumber = 5001;
extern ::google::protobuf::internal::ExtensionIdentifier< ::com::iod::pb::common::base_msg,
    ::google::protobuf::internal::MessageTypeTraits< ::com::iod::pb::test::test_msg_1 >, 11, false >
  _test_msg_1;
static const int kTestMsg2FieldNumber = 5002;
extern ::google::protobuf::internal::ExtensionIdentifier< ::com::iod::pb::common::base_msg,
    ::google::protobuf::internal::MessageTypeTraits< ::com::iod::pb::test::test_msg_2 >, 11, false >
  _test_msg_2;
static const int kTestMsg3FieldNumber = 5003;
extern ::google::protobuf::internal::ExtensionIdentifier< ::com::iod::pb::common::base_msg,
    ::google::protobuf::internal::MessageTypeTraits< ::com::iod::pb::test::test_msg_3 >, 11, false >
  _test_msg_3;
static const int kTestMsg4FieldNumber = 5004;
extern ::google::protobuf::internal::ExtensionIdentifier< ::com::iod::pb::common::base_msg,
    ::google::protobuf::internal::MessageTypeTraits< ::com::iod::pb::test::test_msg_4 >, 11, false >
  _test_msg_4;
static const int kTestMsg5FieldNumber = 5005;
extern ::google::protobuf::internal::ExtensionIdentifier< ::com::iod::pb::common::base_msg,
    ::google::protobuf::internal::MessageTypeTraits< ::com::iod::pb::test::test_msg_5 >, 11, false >
  _test_msg_5;
static const int kTestMsg6FieldNumber = 5006;
extern ::google::protobuf::internal::ExtensionIdentifier< ::com::iod::pb::common::base_msg,
    ::google::protobuf::internal::MessageTypeTraits< ::com::iod::pb::test::test_msg_6 >, 11, false >
  _test_msg_6;
static const int kTestMsg7FieldNumber = 5007;
extern ::google::protobuf::internal::ExtensionIdentifier< ::com::iod::pb::common::base_msg,
    ::google::protobuf::internal::MessageTypeTraits< ::com::iod::pb::test::test_msg_7 >, 11, false >
  _test_msg_7;
static const int kTestMsg8FieldNumber = 5008;
extern ::google::protobuf::internal::ExtensionIdentifier< ::com::iod::pb::common::base_msg,
    ::google::protobuf::internal::MessageTypeTraits< ::com::iod::pb::test::test_msg_8 >, 11, false >
  _test_msg_8;
static const int kTestMsg9FieldNumber = 5009;
extern ::google::protobuf::internal::ExtensionIdentifier< ::com::iod::pb::common::base_msg,
    ::google::protobuf::internal::MessageTypeTraits< ::com::iod::pb::test::test_msg_9 >, 11, false >
  _test_msg_9;
static const int kTestMsg10FieldNumber = 5010;
extern ::google::protobuf::internal::ExtensionIdentifier< ::com::iod::pb::common::base_msg,
    ::google::protobuf::internal::MessageTypeTraits< ::com::iod::pb::test::test_msg_10 >, 11, false >
  _test_msg_10;
static const int kTestMsg11FieldNumber = 5011;
extern ::google::protobuf::internal::ExtensionIdentifier< ::com::iod::pb::common::base_msg,
    ::google::protobuf::internal::MessageTypeTraits< ::com::iod::pb::test::test_msg_11 >, 11, false >
  _test_msg_11;
static const int kTestMsg12FieldNumber = 5012;
extern ::google::protobuf::internal::ExtensionIdentifier< ::com::iod::pb::common::base_msg,
    ::google::protobuf::internal::MessageTypeTraits< ::com::iod::pb::test::test_msg_12 >, 11, false >
  _test_msg_12;
static const int kTestMsg13FieldNumber = 5013;
extern ::google::protobuf::internal::ExtensionIdentifier< ::com::iod::pb::common::base_msg,
    ::google::protobuf::internal::MessageTypeTraits< ::com::iod::pb::test::test_msg_13 >, 11, false >
  _test_msg_13;
static const int kTestMsg14FieldNumber = 5014;
extern ::google::protobuf::internal::ExtensionIdentifier< ::com::iod::pb::common::base_msg,
    ::google::protobuf::internal::MessageTypeTraits< ::com::iod::pb::test::test_msg_14 >, 11, false >
  _test_msg_14;
static const int kTestMsg15FieldNumber = 5015;
extern ::google::protobuf::internal::ExtensionIdentifier< ::com::iod::pb::common::base_msg,
    ::google::protobuf::internal::MessageTypeTraits< ::com::iod::pb::test::test_msg_15 >, 11, false >
  _test_msg_15;
static const int kTestMsg16FieldNumber = 5016;
extern ::google::protobuf::internal::ExtensionIdentifier< ::com::iod::pb::common::base_msg,
    ::google::protobuf::internal::MessageTypeTraits< ::com::iod::pb::test::test_msg_16 >, 11, false >
  _test_msg_16;
static const int kTestMsg17FieldNumber = 5017;
extern ::google::protobuf::internal::ExtensionIdentifier< ::com::iod::pb::common::base_msg,
    ::google::protobuf::internal::MessageTypeTraits< ::com::iod::pb::test::test_msg_17 >, 11, false >
  _test_msg_17;
static const int kTestMsg18FieldNumber = 5018;
extern ::google::protobuf::internal::ExtensionIdentifier< ::com::iod::pb::common::base_msg,
    ::google::protobuf::internal::MessageTypeTraits< ::com::iod::pb::test::test_msg_18 >, 11, false >
  _test_msg_18;
static const int kTestMsg19FieldNumber = 5019;
extern ::google::protobuf::internal::ExtensionIdentifier< ::com::iod::pb::common::base_msg,
    ::google::protobuf::internal::MessageTypeTraits< ::com::iod::pb::test::test_msg_19 >, 11, false >
  _test_msg_19;
static const int kTestMsg20FieldNumber = 5020;
extern ::google::protobuf::internal::ExtensionIdentifier< ::com::iod::pb::common::base_msg,
    ::google::protobuf::internal::MessageTypeTraits< ::com::iod::pb::test::test_msg_20 >, 11, false >
  _test_msg_20;

// ===================================================================

// req_authentication

// optional string userid = 1;
inline bool req_authentication::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void req_authentication::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void req_authentication::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void req_authentication::clear_userid() {
  if (userid_ != &::google::protobuf::internal::kEmptyString) {
    userid_->clear();
  }
  clear_has_userid();
}
inline const ::std::string& req_authentication::userid() const {
  return *userid_;
}
inline void req_authentication::set_userid(const ::std::string& value) {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  userid_->assign(value);
}
inline void req_authentication::set_userid(const char* value) {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  userid_->assign(value);
}
inline void req_authentication::set_userid(const char* value, size_t size) {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  userid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* req_authentication::mutable_userid() {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  return userid_;
}
inline ::std::string* req_authentication::release_userid() {
  clear_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = userid_;
    userid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string authentication = 2;
inline bool req_authentication::has_authentication() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void req_authentication::set_has_authentication() {
  _has_bits_[0] |= 0x00000002u;
}
inline void req_authentication::clear_has_authentication() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void req_authentication::clear_authentication() {
  if (authentication_ != &::google::protobuf::internal::kEmptyString) {
    authentication_->clear();
  }
  clear_has_authentication();
}
inline const ::std::string& req_authentication::authentication() const {
  return *authentication_;
}
inline void req_authentication::set_authentication(const ::std::string& value) {
  set_has_authentication();
  if (authentication_ == &::google::protobuf::internal::kEmptyString) {
    authentication_ = new ::std::string;
  }
  authentication_->assign(value);
}
inline void req_authentication::set_authentication(const char* value) {
  set_has_authentication();
  if (authentication_ == &::google::protobuf::internal::kEmptyString) {
    authentication_ = new ::std::string;
  }
  authentication_->assign(value);
}
inline void req_authentication::set_authentication(const char* value, size_t size) {
  set_has_authentication();
  if (authentication_ == &::google::protobuf::internal::kEmptyString) {
    authentication_ = new ::std::string;
  }
  authentication_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* req_authentication::mutable_authentication() {
  set_has_authentication();
  if (authentication_ == &::google::protobuf::internal::kEmptyString) {
    authentication_ = new ::std::string;
  }
  return authentication_;
}
inline ::std::string* req_authentication::release_authentication() {
  clear_has_authentication();
  if (authentication_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = authentication_;
    authentication_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// res_authentication

// optional sint32 result = 1;
inline bool res_authentication::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void res_authentication::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void res_authentication::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void res_authentication::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 res_authentication::result() const {
  return result_;
}
inline void res_authentication::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional string authorization = 2;
inline bool res_authentication::has_authorization() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void res_authentication::set_has_authorization() {
  _has_bits_[0] |= 0x00000002u;
}
inline void res_authentication::clear_has_authorization() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void res_authentication::clear_authorization() {
  if (authorization_ != &::google::protobuf::internal::kEmptyString) {
    authorization_->clear();
  }
  clear_has_authorization();
}
inline const ::std::string& res_authentication::authorization() const {
  return *authorization_;
}
inline void res_authentication::set_authorization(const ::std::string& value) {
  set_has_authorization();
  if (authorization_ == &::google::protobuf::internal::kEmptyString) {
    authorization_ = new ::std::string;
  }
  authorization_->assign(value);
}
inline void res_authentication::set_authorization(const char* value) {
  set_has_authorization();
  if (authorization_ == &::google::protobuf::internal::kEmptyString) {
    authorization_ = new ::std::string;
  }
  authorization_->assign(value);
}
inline void res_authentication::set_authorization(const char* value, size_t size) {
  set_has_authorization();
  if (authorization_ == &::google::protobuf::internal::kEmptyString) {
    authorization_ = new ::std::string;
  }
  authorization_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* res_authentication::mutable_authorization() {
  set_has_authorization();
  if (authorization_ == &::google::protobuf::internal::kEmptyString) {
    authorization_ = new ::std::string;
  }
  return authorization_;
}
inline ::std::string* res_authentication::release_authorization() {
  clear_has_authorization();
  if (authorization_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = authorization_;
    authorization_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// req_login

// optional string userid = 1;
inline bool req_login::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void req_login::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void req_login::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void req_login::clear_userid() {
  if (userid_ != &::google::protobuf::internal::kEmptyString) {
    userid_->clear();
  }
  clear_has_userid();
}
inline const ::std::string& req_login::userid() const {
  return *userid_;
}
inline void req_login::set_userid(const ::std::string& value) {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  userid_->assign(value);
}
inline void req_login::set_userid(const char* value) {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  userid_->assign(value);
}
inline void req_login::set_userid(const char* value, size_t size) {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  userid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* req_login::mutable_userid() {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  return userid_;
}
inline ::std::string* req_login::release_userid() {
  clear_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = userid_;
    userid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string authorization = 2;
inline bool req_login::has_authorization() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void req_login::set_has_authorization() {
  _has_bits_[0] |= 0x00000002u;
}
inline void req_login::clear_has_authorization() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void req_login::clear_authorization() {
  if (authorization_ != &::google::protobuf::internal::kEmptyString) {
    authorization_->clear();
  }
  clear_has_authorization();
}
inline const ::std::string& req_login::authorization() const {
  return *authorization_;
}
inline void req_login::set_authorization(const ::std::string& value) {
  set_has_authorization();
  if (authorization_ == &::google::protobuf::internal::kEmptyString) {
    authorization_ = new ::std::string;
  }
  authorization_->assign(value);
}
inline void req_login::set_authorization(const char* value) {
  set_has_authorization();
  if (authorization_ == &::google::protobuf::internal::kEmptyString) {
    authorization_ = new ::std::string;
  }
  authorization_->assign(value);
}
inline void req_login::set_authorization(const char* value, size_t size) {
  set_has_authorization();
  if (authorization_ == &::google::protobuf::internal::kEmptyString) {
    authorization_ = new ::std::string;
  }
  authorization_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* req_login::mutable_authorization() {
  set_has_authorization();
  if (authorization_ == &::google::protobuf::internal::kEmptyString) {
    authorization_ = new ::std::string;
  }
  return authorization_;
}
inline ::std::string* req_login::release_authorization() {
  clear_has_authorization();
  if (authorization_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = authorization_;
    authorization_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// res_login

// optional string userid = 1;
inline bool res_login::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void res_login::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void res_login::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void res_login::clear_userid() {
  if (userid_ != &::google::protobuf::internal::kEmptyString) {
    userid_->clear();
  }
  clear_has_userid();
}
inline const ::std::string& res_login::userid() const {
  return *userid_;
}
inline void res_login::set_userid(const ::std::string& value) {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  userid_->assign(value);
}
inline void res_login::set_userid(const char* value) {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  userid_->assign(value);
}
inline void res_login::set_userid(const char* value, size_t size) {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  userid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* res_login::mutable_userid() {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  return userid_;
}
inline ::std::string* res_login::release_userid() {
  clear_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = userid_;
    userid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional sint32 result = 2;
inline bool res_login::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void res_login::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void res_login::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void res_login::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 res_login::result() const {
  return result_;
}
inline void res_login::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// req_test_info

// optional string info = 1;
inline bool req_test_info::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void req_test_info::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void req_test_info::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void req_test_info::clear_info() {
  if (info_ != &::google::protobuf::internal::kEmptyString) {
    info_->clear();
  }
  clear_has_info();
}
inline const ::std::string& req_test_info::info() const {
  return *info_;
}
inline void req_test_info::set_info(const ::std::string& value) {
  set_has_info();
  if (info_ == &::google::protobuf::internal::kEmptyString) {
    info_ = new ::std::string;
  }
  info_->assign(value);
}
inline void req_test_info::set_info(const char* value) {
  set_has_info();
  if (info_ == &::google::protobuf::internal::kEmptyString) {
    info_ = new ::std::string;
  }
  info_->assign(value);
}
inline void req_test_info::set_info(const char* value, size_t size) {
  set_has_info();
  if (info_ == &::google::protobuf::internal::kEmptyString) {
    info_ = new ::std::string;
  }
  info_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* req_test_info::mutable_info() {
  set_has_info();
  if (info_ == &::google::protobuf::internal::kEmptyString) {
    info_ = new ::std::string;
  }
  return info_;
}
inline ::std::string* req_test_info::release_info() {
  clear_has_info();
  if (info_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = info_;
    info_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// res_test_info

// optional string info = 1;
inline bool res_test_info::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void res_test_info::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void res_test_info::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void res_test_info::clear_info() {
  if (info_ != &::google::protobuf::internal::kEmptyString) {
    info_->clear();
  }
  clear_has_info();
}
inline const ::std::string& res_test_info::info() const {
  return *info_;
}
inline void res_test_info::set_info(const ::std::string& value) {
  set_has_info();
  if (info_ == &::google::protobuf::internal::kEmptyString) {
    info_ = new ::std::string;
  }
  info_->assign(value);
}
inline void res_test_info::set_info(const char* value) {
  set_has_info();
  if (info_ == &::google::protobuf::internal::kEmptyString) {
    info_ = new ::std::string;
  }
  info_->assign(value);
}
inline void res_test_info::set_info(const char* value, size_t size) {
  set_has_info();
  if (info_ == &::google::protobuf::internal::kEmptyString) {
    info_ = new ::std::string;
  }
  info_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* res_test_info::mutable_info() {
  set_has_info();
  if (info_ == &::google::protobuf::internal::kEmptyString) {
    info_ = new ::std::string;
  }
  return info_;
}
inline ::std::string* res_test_info::release_info() {
  clear_has_info();
  if (info_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = info_;
    info_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// req_logout

// -------------------------------------------------------------------

// req_test_response_time

// required sint64 req_timestamp = 1;
inline bool req_test_response_time::has_req_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void req_test_response_time::set_has_req_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void req_test_response_time::clear_has_req_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void req_test_response_time::clear_req_timestamp() {
  req_timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_req_timestamp();
}
inline ::google::protobuf::int64 req_test_response_time::req_timestamp() const {
  return req_timestamp_;
}
inline void req_test_response_time::set_req_timestamp(::google::protobuf::int64 value) {
  set_has_req_timestamp();
  req_timestamp_ = value;
}

// -------------------------------------------------------------------

// res_test_response_time

// required sint64 req_timestamp = 1;
inline bool res_test_response_time::has_req_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void res_test_response_time::set_has_req_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void res_test_response_time::clear_has_req_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void res_test_response_time::clear_req_timestamp() {
  req_timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_req_timestamp();
}
inline ::google::protobuf::int64 res_test_response_time::req_timestamp() const {
  return req_timestamp_;
}
inline void res_test_response_time::set_req_timestamp(::google::protobuf::int64 value) {
  set_has_req_timestamp();
  req_timestamp_ = value;
}

// -------------------------------------------------------------------

// notify_kickout

// optional sint32 kick_reason = 1;
inline bool notify_kickout::has_kick_reason() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void notify_kickout::set_has_kick_reason() {
  _has_bits_[0] |= 0x00000001u;
}
inline void notify_kickout::clear_has_kick_reason() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void notify_kickout::clear_kick_reason() {
  kick_reason_ = 0;
  clear_has_kick_reason();
}
inline ::google::protobuf::int32 notify_kickout::kick_reason() const {
  return kick_reason_;
}
inline void notify_kickout::set_kick_reason(::google::protobuf::int32 value) {
  set_has_kick_reason();
  kick_reason_ = value;
}

// -------------------------------------------------------------------

// test_msg_1

// optional bytes test_data = 1;
inline bool test_msg_1::has_test_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void test_msg_1::set_has_test_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void test_msg_1::clear_has_test_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void test_msg_1::clear_test_data() {
  if (test_data_ != &::google::protobuf::internal::kEmptyString) {
    test_data_->clear();
  }
  clear_has_test_data();
}
inline const ::std::string& test_msg_1::test_data() const {
  return *test_data_;
}
inline void test_msg_1::set_test_data(const ::std::string& value) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(value);
}
inline void test_msg_1::set_test_data(const char* value) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(value);
}
inline void test_msg_1::set_test_data(const void* value, size_t size) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* test_msg_1::mutable_test_data() {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  return test_data_;
}
inline ::std::string* test_msg_1::release_test_data() {
  clear_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = test_data_;
    test_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// test_msg_2

// optional bytes test_data = 1;
inline bool test_msg_2::has_test_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void test_msg_2::set_has_test_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void test_msg_2::clear_has_test_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void test_msg_2::clear_test_data() {
  if (test_data_ != &::google::protobuf::internal::kEmptyString) {
    test_data_->clear();
  }
  clear_has_test_data();
}
inline const ::std::string& test_msg_2::test_data() const {
  return *test_data_;
}
inline void test_msg_2::set_test_data(const ::std::string& value) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(value);
}
inline void test_msg_2::set_test_data(const char* value) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(value);
}
inline void test_msg_2::set_test_data(const void* value, size_t size) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* test_msg_2::mutable_test_data() {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  return test_data_;
}
inline ::std::string* test_msg_2::release_test_data() {
  clear_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = test_data_;
    test_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// test_msg_3

// optional bytes test_data = 1;
inline bool test_msg_3::has_test_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void test_msg_3::set_has_test_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void test_msg_3::clear_has_test_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void test_msg_3::clear_test_data() {
  if (test_data_ != &::google::protobuf::internal::kEmptyString) {
    test_data_->clear();
  }
  clear_has_test_data();
}
inline const ::std::string& test_msg_3::test_data() const {
  return *test_data_;
}
inline void test_msg_3::set_test_data(const ::std::string& value) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(value);
}
inline void test_msg_3::set_test_data(const char* value) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(value);
}
inline void test_msg_3::set_test_data(const void* value, size_t size) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* test_msg_3::mutable_test_data() {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  return test_data_;
}
inline ::std::string* test_msg_3::release_test_data() {
  clear_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = test_data_;
    test_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// test_msg_4

// optional bytes test_data = 1;
inline bool test_msg_4::has_test_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void test_msg_4::set_has_test_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void test_msg_4::clear_has_test_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void test_msg_4::clear_test_data() {
  if (test_data_ != &::google::protobuf::internal::kEmptyString) {
    test_data_->clear();
  }
  clear_has_test_data();
}
inline const ::std::string& test_msg_4::test_data() const {
  return *test_data_;
}
inline void test_msg_4::set_test_data(const ::std::string& value) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(value);
}
inline void test_msg_4::set_test_data(const char* value) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(value);
}
inline void test_msg_4::set_test_data(const void* value, size_t size) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* test_msg_4::mutable_test_data() {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  return test_data_;
}
inline ::std::string* test_msg_4::release_test_data() {
  clear_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = test_data_;
    test_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// test_msg_5

// optional bytes test_data = 1;
inline bool test_msg_5::has_test_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void test_msg_5::set_has_test_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void test_msg_5::clear_has_test_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void test_msg_5::clear_test_data() {
  if (test_data_ != &::google::protobuf::internal::kEmptyString) {
    test_data_->clear();
  }
  clear_has_test_data();
}
inline const ::std::string& test_msg_5::test_data() const {
  return *test_data_;
}
inline void test_msg_5::set_test_data(const ::std::string& value) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(value);
}
inline void test_msg_5::set_test_data(const char* value) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(value);
}
inline void test_msg_5::set_test_data(const void* value, size_t size) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* test_msg_5::mutable_test_data() {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  return test_data_;
}
inline ::std::string* test_msg_5::release_test_data() {
  clear_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = test_data_;
    test_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// test_msg_6

// optional bytes test_data = 1;
inline bool test_msg_6::has_test_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void test_msg_6::set_has_test_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void test_msg_6::clear_has_test_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void test_msg_6::clear_test_data() {
  if (test_data_ != &::google::protobuf::internal::kEmptyString) {
    test_data_->clear();
  }
  clear_has_test_data();
}
inline const ::std::string& test_msg_6::test_data() const {
  return *test_data_;
}
inline void test_msg_6::set_test_data(const ::std::string& value) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(value);
}
inline void test_msg_6::set_test_data(const char* value) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(value);
}
inline void test_msg_6::set_test_data(const void* value, size_t size) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* test_msg_6::mutable_test_data() {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  return test_data_;
}
inline ::std::string* test_msg_6::release_test_data() {
  clear_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = test_data_;
    test_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// test_msg_7

// optional bytes test_data = 1;
inline bool test_msg_7::has_test_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void test_msg_7::set_has_test_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void test_msg_7::clear_has_test_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void test_msg_7::clear_test_data() {
  if (test_data_ != &::google::protobuf::internal::kEmptyString) {
    test_data_->clear();
  }
  clear_has_test_data();
}
inline const ::std::string& test_msg_7::test_data() const {
  return *test_data_;
}
inline void test_msg_7::set_test_data(const ::std::string& value) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(value);
}
inline void test_msg_7::set_test_data(const char* value) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(value);
}
inline void test_msg_7::set_test_data(const void* value, size_t size) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* test_msg_7::mutable_test_data() {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  return test_data_;
}
inline ::std::string* test_msg_7::release_test_data() {
  clear_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = test_data_;
    test_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// test_msg_8

// optional bytes test_data = 1;
inline bool test_msg_8::has_test_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void test_msg_8::set_has_test_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void test_msg_8::clear_has_test_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void test_msg_8::clear_test_data() {
  if (test_data_ != &::google::protobuf::internal::kEmptyString) {
    test_data_->clear();
  }
  clear_has_test_data();
}
inline const ::std::string& test_msg_8::test_data() const {
  return *test_data_;
}
inline void test_msg_8::set_test_data(const ::std::string& value) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(value);
}
inline void test_msg_8::set_test_data(const char* value) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(value);
}
inline void test_msg_8::set_test_data(const void* value, size_t size) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* test_msg_8::mutable_test_data() {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  return test_data_;
}
inline ::std::string* test_msg_8::release_test_data() {
  clear_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = test_data_;
    test_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// test_msg_9

// optional bytes test_data = 1;
inline bool test_msg_9::has_test_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void test_msg_9::set_has_test_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void test_msg_9::clear_has_test_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void test_msg_9::clear_test_data() {
  if (test_data_ != &::google::protobuf::internal::kEmptyString) {
    test_data_->clear();
  }
  clear_has_test_data();
}
inline const ::std::string& test_msg_9::test_data() const {
  return *test_data_;
}
inline void test_msg_9::set_test_data(const ::std::string& value) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(value);
}
inline void test_msg_9::set_test_data(const char* value) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(value);
}
inline void test_msg_9::set_test_data(const void* value, size_t size) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* test_msg_9::mutable_test_data() {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  return test_data_;
}
inline ::std::string* test_msg_9::release_test_data() {
  clear_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = test_data_;
    test_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// test_msg_10

// optional bytes test_data = 1;
inline bool test_msg_10::has_test_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void test_msg_10::set_has_test_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void test_msg_10::clear_has_test_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void test_msg_10::clear_test_data() {
  if (test_data_ != &::google::protobuf::internal::kEmptyString) {
    test_data_->clear();
  }
  clear_has_test_data();
}
inline const ::std::string& test_msg_10::test_data() const {
  return *test_data_;
}
inline void test_msg_10::set_test_data(const ::std::string& value) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(value);
}
inline void test_msg_10::set_test_data(const char* value) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(value);
}
inline void test_msg_10::set_test_data(const void* value, size_t size) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* test_msg_10::mutable_test_data() {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  return test_data_;
}
inline ::std::string* test_msg_10::release_test_data() {
  clear_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = test_data_;
    test_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// test_msg_11

// optional bytes test_data = 1;
inline bool test_msg_11::has_test_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void test_msg_11::set_has_test_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void test_msg_11::clear_has_test_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void test_msg_11::clear_test_data() {
  if (test_data_ != &::google::protobuf::internal::kEmptyString) {
    test_data_->clear();
  }
  clear_has_test_data();
}
inline const ::std::string& test_msg_11::test_data() const {
  return *test_data_;
}
inline void test_msg_11::set_test_data(const ::std::string& value) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(value);
}
inline void test_msg_11::set_test_data(const char* value) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(value);
}
inline void test_msg_11::set_test_data(const void* value, size_t size) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* test_msg_11::mutable_test_data() {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  return test_data_;
}
inline ::std::string* test_msg_11::release_test_data() {
  clear_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = test_data_;
    test_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// test_msg_12

// optional bytes test_data = 1;
inline bool test_msg_12::has_test_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void test_msg_12::set_has_test_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void test_msg_12::clear_has_test_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void test_msg_12::clear_test_data() {
  if (test_data_ != &::google::protobuf::internal::kEmptyString) {
    test_data_->clear();
  }
  clear_has_test_data();
}
inline const ::std::string& test_msg_12::test_data() const {
  return *test_data_;
}
inline void test_msg_12::set_test_data(const ::std::string& value) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(value);
}
inline void test_msg_12::set_test_data(const char* value) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(value);
}
inline void test_msg_12::set_test_data(const void* value, size_t size) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* test_msg_12::mutable_test_data() {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  return test_data_;
}
inline ::std::string* test_msg_12::release_test_data() {
  clear_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = test_data_;
    test_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// test_msg_13

// optional bytes test_data = 1;
inline bool test_msg_13::has_test_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void test_msg_13::set_has_test_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void test_msg_13::clear_has_test_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void test_msg_13::clear_test_data() {
  if (test_data_ != &::google::protobuf::internal::kEmptyString) {
    test_data_->clear();
  }
  clear_has_test_data();
}
inline const ::std::string& test_msg_13::test_data() const {
  return *test_data_;
}
inline void test_msg_13::set_test_data(const ::std::string& value) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(value);
}
inline void test_msg_13::set_test_data(const char* value) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(value);
}
inline void test_msg_13::set_test_data(const void* value, size_t size) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* test_msg_13::mutable_test_data() {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  return test_data_;
}
inline ::std::string* test_msg_13::release_test_data() {
  clear_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = test_data_;
    test_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// test_msg_14

// optional bytes test_data = 1;
inline bool test_msg_14::has_test_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void test_msg_14::set_has_test_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void test_msg_14::clear_has_test_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void test_msg_14::clear_test_data() {
  if (test_data_ != &::google::protobuf::internal::kEmptyString) {
    test_data_->clear();
  }
  clear_has_test_data();
}
inline const ::std::string& test_msg_14::test_data() const {
  return *test_data_;
}
inline void test_msg_14::set_test_data(const ::std::string& value) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(value);
}
inline void test_msg_14::set_test_data(const char* value) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(value);
}
inline void test_msg_14::set_test_data(const void* value, size_t size) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* test_msg_14::mutable_test_data() {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  return test_data_;
}
inline ::std::string* test_msg_14::release_test_data() {
  clear_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = test_data_;
    test_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// test_msg_15

// optional bytes test_data = 1;
inline bool test_msg_15::has_test_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void test_msg_15::set_has_test_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void test_msg_15::clear_has_test_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void test_msg_15::clear_test_data() {
  if (test_data_ != &::google::protobuf::internal::kEmptyString) {
    test_data_->clear();
  }
  clear_has_test_data();
}
inline const ::std::string& test_msg_15::test_data() const {
  return *test_data_;
}
inline void test_msg_15::set_test_data(const ::std::string& value) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(value);
}
inline void test_msg_15::set_test_data(const char* value) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(value);
}
inline void test_msg_15::set_test_data(const void* value, size_t size) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* test_msg_15::mutable_test_data() {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  return test_data_;
}
inline ::std::string* test_msg_15::release_test_data() {
  clear_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = test_data_;
    test_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// test_msg_16

// optional bytes test_data = 1;
inline bool test_msg_16::has_test_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void test_msg_16::set_has_test_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void test_msg_16::clear_has_test_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void test_msg_16::clear_test_data() {
  if (test_data_ != &::google::protobuf::internal::kEmptyString) {
    test_data_->clear();
  }
  clear_has_test_data();
}
inline const ::std::string& test_msg_16::test_data() const {
  return *test_data_;
}
inline void test_msg_16::set_test_data(const ::std::string& value) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(value);
}
inline void test_msg_16::set_test_data(const char* value) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(value);
}
inline void test_msg_16::set_test_data(const void* value, size_t size) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* test_msg_16::mutable_test_data() {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  return test_data_;
}
inline ::std::string* test_msg_16::release_test_data() {
  clear_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = test_data_;
    test_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// test_msg_17

// optional bytes test_data = 1;
inline bool test_msg_17::has_test_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void test_msg_17::set_has_test_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void test_msg_17::clear_has_test_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void test_msg_17::clear_test_data() {
  if (test_data_ != &::google::protobuf::internal::kEmptyString) {
    test_data_->clear();
  }
  clear_has_test_data();
}
inline const ::std::string& test_msg_17::test_data() const {
  return *test_data_;
}
inline void test_msg_17::set_test_data(const ::std::string& value) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(value);
}
inline void test_msg_17::set_test_data(const char* value) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(value);
}
inline void test_msg_17::set_test_data(const void* value, size_t size) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* test_msg_17::mutable_test_data() {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  return test_data_;
}
inline ::std::string* test_msg_17::release_test_data() {
  clear_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = test_data_;
    test_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// test_msg_18

// optional bytes test_data = 1;
inline bool test_msg_18::has_test_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void test_msg_18::set_has_test_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void test_msg_18::clear_has_test_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void test_msg_18::clear_test_data() {
  if (test_data_ != &::google::protobuf::internal::kEmptyString) {
    test_data_->clear();
  }
  clear_has_test_data();
}
inline const ::std::string& test_msg_18::test_data() const {
  return *test_data_;
}
inline void test_msg_18::set_test_data(const ::std::string& value) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(value);
}
inline void test_msg_18::set_test_data(const char* value) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(value);
}
inline void test_msg_18::set_test_data(const void* value, size_t size) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* test_msg_18::mutable_test_data() {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  return test_data_;
}
inline ::std::string* test_msg_18::release_test_data() {
  clear_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = test_data_;
    test_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// test_msg_19

// optional bytes test_data = 1;
inline bool test_msg_19::has_test_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void test_msg_19::set_has_test_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void test_msg_19::clear_has_test_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void test_msg_19::clear_test_data() {
  if (test_data_ != &::google::protobuf::internal::kEmptyString) {
    test_data_->clear();
  }
  clear_has_test_data();
}
inline const ::std::string& test_msg_19::test_data() const {
  return *test_data_;
}
inline void test_msg_19::set_test_data(const ::std::string& value) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(value);
}
inline void test_msg_19::set_test_data(const char* value) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(value);
}
inline void test_msg_19::set_test_data(const void* value, size_t size) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* test_msg_19::mutable_test_data() {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  return test_data_;
}
inline ::std::string* test_msg_19::release_test_data() {
  clear_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = test_data_;
    test_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// test_msg_20

// optional bytes test_data = 1;
inline bool test_msg_20::has_test_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void test_msg_20::set_has_test_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void test_msg_20::clear_has_test_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void test_msg_20::clear_test_data() {
  if (test_data_ != &::google::protobuf::internal::kEmptyString) {
    test_data_->clear();
  }
  clear_has_test_data();
}
inline const ::std::string& test_msg_20::test_data() const {
  return *test_data_;
}
inline void test_msg_20::set_test_data(const ::std::string& value) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(value);
}
inline void test_msg_20::set_test_data(const char* value) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(value);
}
inline void test_msg_20::set_test_data(const void* value, size_t size) {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  test_data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* test_msg_20::mutable_test_data() {
  set_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    test_data_ = new ::std::string;
  }
  return test_data_;
}
inline ::std::string* test_msg_20::release_test_data() {
  clear_has_test_data();
  if (test_data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = test_data_;
    test_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace test
}  // namespace pb
}  // namespace iod
}  // namespace com

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_iod_5ftest_2eproto__INCLUDED
