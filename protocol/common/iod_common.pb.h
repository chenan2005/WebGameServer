// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/iod_common.proto

#ifndef PROTOBUF_common_2fiod_5fcommon_2eproto__INCLUDED
#define PROTOBUF_common_2fiod_5fcommon_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace iod {
namespace pb {
namespace common {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_common_2fiod_5fcommon_2eproto();
void protobuf_AssignDesc_common_2fiod_5fcommon_2eproto();
void protobuf_ShutdownFile_common_2fiod_5fcommon_2eproto();

class BaseMsg;

// ===================================================================

class BaseMsg : public ::google::protobuf::Message {
 public:
  BaseMsg();
  virtual ~BaseMsg();
  
  BaseMsg(const BaseMsg& from);
  
  inline BaseMsg& operator=(const BaseMsg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BaseMsg& default_instance();
  
  void Swap(BaseMsg* other);
  
  // implements Message ----------------------------------------------
  
  BaseMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BaseMsg& from);
  void MergeFrom(const BaseMsg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional sint32 from = 1;
  inline bool has_from() const;
  inline void clear_from();
  static const int kFromFieldNumber = 1;
  inline ::google::protobuf::int32 from() const;
  inline void set_from(::google::protobuf::int32 value);
  
  // optional sint32 to = 2;
  inline bool has_to() const;
  inline void clear_to();
  static const int kToFieldNumber = 2;
  inline ::google::protobuf::int32 to() const;
  inline void set_to(::google::protobuf::int32 value);
  
  // optional sint32 flags = 3;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 3;
  inline ::google::protobuf::int32 flags() const;
  inline void set_flags(::google::protobuf::int32 value);
  
  // required sint32 message_id = 4;
  inline bool has_message_id() const;
  inline void clear_message_id();
  static const int kMessageIdFieldNumber = 4;
  inline ::google::protobuf::int32 message_id() const;
  inline void set_message_id(::google::protobuf::int32 value);
  
  GOOGLE_PROTOBUF_EXTENSION_ACCESSORS(BaseMsg)
  // @@protoc_insertion_point(class_scope:com.iod.pb.common.BaseMsg)
 private:
  inline void set_has_from();
  inline void clear_has_from();
  inline void set_has_to();
  inline void clear_has_to();
  inline void set_has_flags();
  inline void clear_has_flags();
  inline void set_has_message_id();
  inline void clear_has_message_id();
  
  ::google::protobuf::internal::ExtensionSet _extensions_;
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 from_;
  ::google::protobuf::int32 to_;
  ::google::protobuf::int32 flags_;
  ::google::protobuf::int32 message_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_common_2fiod_5fcommon_2eproto();
  friend void protobuf_AssignDesc_common_2fiod_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_common_2fiod_5fcommon_2eproto();
  
  void InitAsDefaultInstance();
  static BaseMsg* default_instance_;
};
// ===================================================================


// ===================================================================

// BaseMsg

// optional sint32 from = 1;
inline bool BaseMsg::has_from() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BaseMsg::set_has_from() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BaseMsg::clear_has_from() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BaseMsg::clear_from() {
  from_ = 0;
  clear_has_from();
}
inline ::google::protobuf::int32 BaseMsg::from() const {
  return from_;
}
inline void BaseMsg::set_from(::google::protobuf::int32 value) {
  set_has_from();
  from_ = value;
}

// optional sint32 to = 2;
inline bool BaseMsg::has_to() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BaseMsg::set_has_to() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BaseMsg::clear_has_to() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BaseMsg::clear_to() {
  to_ = 0;
  clear_has_to();
}
inline ::google::protobuf::int32 BaseMsg::to() const {
  return to_;
}
inline void BaseMsg::set_to(::google::protobuf::int32 value) {
  set_has_to();
  to_ = value;
}

// optional sint32 flags = 3;
inline bool BaseMsg::has_flags() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BaseMsg::set_has_flags() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BaseMsg::clear_has_flags() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BaseMsg::clear_flags() {
  flags_ = 0;
  clear_has_flags();
}
inline ::google::protobuf::int32 BaseMsg::flags() const {
  return flags_;
}
inline void BaseMsg::set_flags(::google::protobuf::int32 value) {
  set_has_flags();
  flags_ = value;
}

// required sint32 message_id = 4;
inline bool BaseMsg::has_message_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BaseMsg::set_has_message_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BaseMsg::clear_has_message_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BaseMsg::clear_message_id() {
  message_id_ = 0;
  clear_has_message_id();
}
inline ::google::protobuf::int32 BaseMsg::message_id() const {
  return message_id_;
}
inline void BaseMsg::set_message_id(::google::protobuf::int32 value) {
  set_has_message_id();
  message_id_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace common
}  // namespace pb
}  // namespace iod
}  // namespace com

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_common_2fiod_5fcommon_2eproto__INCLUDED
